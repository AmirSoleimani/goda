kind: pipeline
name: testing

volumes:
- name: cache
  temp: {}

steps:
- name: build
  image: golang
  volumes: [{name: cache, path: "/cache"}]
  commands:
  # download dependencies
  - go mod download
  # install everything
  - go install -v -race ./...
  # save built things into cache
  - mkdir /cache/go
  - cp -arp $(go env GOPATH)/* /cache/go

- name: lint
  group: testing
  image: golangci/golangci-lint
  depends_on: [build]
  volumes: [{name: cache, path: "/cache"}]
  commands:
  # restore cache
  - cp -arp /cache/go/* $(go env GOPATH)
  # create custom GOPATH
  - mkdir -p $(go env GOPATH)/src/github.com/loov/goda
  - cp -arp ./* $(go env GOPATH)/src/github.com/loov/goda
  - cd $(go env GOPATH)/src/github.com/loov/goda
  # add dependencies to $GOPATH
  - GO111MODULE=on go mod vendor
  - cp -r ./vendor/* $(go env GOPATH)/src
  - rm -rf ./vendor
  # run linter
  - GO111MODULE=off golangci-lint -j 4 run

- name: test
  group: testing
  image: golang
  depends_on: [build]
  volumes: [{name: cache, path: "/cache"}]
  commands:
  # restore cache
  - cp -arp /cache/go/* $(go env GOPATH)
  # run tests
  - go test -v -race ./...